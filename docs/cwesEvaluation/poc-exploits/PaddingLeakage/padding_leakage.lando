abstract exposed_data
  // Attributes about the particular exposed data
  or type
    credentials
    cryptography
    system
    stat
    personally_identifiable
    documents
    business

  // Sensitivity of the information.  E.g., non-sensitivity would
  // not result in harm if exposed (e.g. public records).
  xor sensitivity
    high
    low

  or state
    stored      // In files
    used        // In source/comments, threads, registries, cookies
    transferred // e.g., between processes or over a network

  xor size
    little
    some_
    huge

abstract iex_weakness
  data ->> exposed_data

  // To what degree does the weakness allow an attacker
  // to control which data is exposed
  xor exposure
    selective
    random

  // How often can the exposure occur
  xor frequency
    once
    on_demand
    on_timing //e.g. race conditions

  // How useful is the information on its own?
  xor use
    direct
    indirect

  or cause
    // Information passing from a protected
    // domain to general pool
    unclear_before_release
    // As above but between domains
    cross_boundary
    // Improper protection/preparation of data
    unprotected_sensitive_data
    // Implementation/Aglorithm errors in SW and HW
    sw_behavior
    hw_behavior
    // E.g. generating messages with too much information
    // (filenames, passwords, etc)
    improper_details
    // Failure to encrypt properly
    enc
    // Authentication/Authorization error
    atn_aut
    // Code injection
    inj
    // Interaction frequency
    // (e.g. this would allow brute force attacks)
    cif

myCPU_exposed_data: exposed_data
  [ high ]
  [ used && transferred ]
  [ little ]
myCPU_IL_IEX: iex_weakness
  [ data = myCPU_exposed_data ]
  [ random ]
  [ on_demand ]
  [ indirect ]
