# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# This is the configuration file for cyberPhys
# User Help:
# If you want to create your own file, please enable `useCustomCyberPhysConfig` and enter the path in
# `pathToCustomCyberPhysConfig` in the besspin config file. Note that `myCyberPhys.ini` is git ignored ;)
# Please fill-in the options as needed then run ./besspin.py
# Keep the comments on seperate lines from values. Order of parameters does not matter, but section headers are required.
# Parameters names are case sensitive.
# For bool types, you can use 0/1, False/True, Yes/No [Case insensitive].
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# The DEFAULT section overwrites the other sections ONLY if the option is not explicitly defined in the other targets.
# If `nTargets == N` (besspin config), then there has to be sections `target1` --> `targetN`.
[DEFAULT]
binarySource = GFE
# [ GFE | LMCO | Michigan | MIT | SRI-Cambridge ]
sourceVariant = default
# [ default | purecap | temporal ]. purecap and temporal are only compatible with SRI-Cambridge.
target = vcu118
# [ qemu | vcu118 | awsf1 ]
vcu118Mode = nonPersistent
# [ nonPersistent | flashProgramAndBoot | flashBoot ]. Only applicable if target is set to "vcu118".
# You need to have physical (non-remote) access to the vcu118 board if you choose the flash options.
processor = chisel_p2
# [bluespec_p1, chisel_p1, bluespec_p2, chisel_p2, bluespec_p3, chisel_p3]
osImage = debian
# [ debian | FreeRTOS | FreeBSD | busybox(limited) ]
freertosFatFs = default
# Only applicable in 'test' mode and if 'buildApps' is enabled
# [ default (ramdisk for vcu118 and dosblk for awsf1) | ramdisk | dosblk (only on awsf1) | sdcard (only on vcu118) ]
elfLoader = netboot
# [ JTAG | netboot ]
useCustomOsImage = No
# Source of the OS image: If 'No', Nix/BESSPIN-LFS will be used.
pathToCustomOsImage = /path/to/image
# Path to the osImage in case 'useCustomOsImage' is set to Yes.
useCustomProcessor = No
# Source of the processor files: If 'No', Nix/BESSPIN-LFS will be used.
pathToCustomProcessorSource = /path/to/source/directory
# Path to a directory with all the files needed (following the structure of BESSPIN-LFS) to use the custom processor in case 'useCustomProcessor' is set to Yes.
useCustomQemu = No
# Source of Qemu binary:  If 'No', Nix qemu-system-riscv64 will be used.
pathToCustomQemu = /path/to/qemu
# Path to an appropriate qemu binary to use when useCustomQemu is yes.
useCustomHwTarget = Yes
# In a many-board system, use the HW Target specified by "customHWTarget".
customHwTarget = localhost:3121/xilinx_tcf/Digilent/210308XXXXXX
# The HW Target to use if useCustomHwTarget is enabled.
useCustomTargetIp = Yes
# Use a custom IP address for the targets
customTargetIp = XXX.XXX.XXX.XXX
# The Target IP to use if useCustomTargetIp is enabled.
#--------------------------------------------------------------------------------

#--------------------------------------------------------------------------------
# hostIP = 10.88.88.1
# P2
# Infotainment server
# OTA update server

#--------------------------------------------------------------------------------
[target1]
# SCENARIO 1: Baseline
# label = "Baseline ECU 1"
customTargetIp = 10.88.88.12
customHwTarget = localhost:3121/xilinx_tcf/Digilent/210308A5F099
# The HW Target to use if useCustomHwTarget is enabled.
#--------------------------------------------------------------------------------

#--------------------------------------------------------------------------------
[target2]
# SCENARIO 2: Secure Infotainment
# label = "Baseline ECU 2"
customTargetIp = 10.88.88.22
customHwTarget = localhost:3121/xilinx_tcf/Digilent/210308A5F7BB
# The HW Target to use if useCustomHwTarget is enabled.
#--------------------------------------------------------------------------------

#--------------------------------------------------------------------------------
[target3]
# SCENARIO 3: Secure ECU
# label = "Secure ECU"
# binarySource = SRI-Cambridge
customTargetIp = 10.88.88.32
customHwTarget = localhost:3121/xilinx_tcf/Digilent/210308A3B66F
# The HW Target to use if useCustomHwTarget is enabled.
#--------------------------------------------------------------------------------

#--------------------------------------------------------------------------------
[target4]
# SCENARIO 1: Baseline
# label = "Baseline Infotainment 1"
osImage = debian
customTargetIp = 10.88.88.11
customHwTarget = localhost:3121/xilinx_tcf/Digilent/210308A5F7BD
# The HW Target to use if useCustomHwTarget is enabled.
#--------------------------------------------------------------------------------

#--------------------------------------------------------------------------------
[target5]
# SCENARIO 2: Secure Infotainment
# label = "Secure Infotainment"
# binarySource = LMCO
osImage = debian
customTargetIp = 10.88.88.21
customHwTarget = localhost:3121/xilinx_tcf/Digilent/210308A471FB
# The HW Target to use if useCustomHwTarget is enabled.
#--------------------------------------------------------------------------------

#--------------------------------------------------------------------------------
[target6]
# SCENARIO 3: Secure ECU
# label = "Baseline Infotainment 2"
osImage = debian
customTargetIp = 10.88.88.31
customHwTarget = localhost:3121/xilinx_tcf/Digilent/210308AAF988
# The HW Target to use if useCustomHwTarget is enabled.
#--------------------------------------------------------------------------------
