@startuml
state "Infotainment Thin Client Start up" as ClientUp
state "Infotainment Thin Client Ready" as ClientReady
state "Infotainment Thin Client Terminate" as ClientTerminate
state "Process Button Pressed" as ProcessButtonPress
state "Process Reset Button" as ProcessResetButton
state "Process Station/Volume Button" as ProcessInfotainmentButton
state "Process CAN message" as ProcessCanMsg
state "Update Map" as UpdateMap
state "Update internal state" as UpdateState

UpdateMap: Update car position

ClientUp: boot OS
ClientUp: connect to the network
ClientUp: start Infotainment UI app

ClientReady: UI running

[*] --> ClientUp: Infotainment Thin Client powered up

ClientUp -[#blue]-> ClientReady: Success\nSend CMD_COMPONENT_READY(THIN_CLIENT)

ClientReady -[#blue]-> ClientReady: Periodically\nsend CMD_COMPONENT_READY(THIN_CLIENT)

ClientUp --> [*]: Failed to initialize\nNo way to send messages yet\nSimply terminate

ClientReady --> ProcessButtonPress: Button pressed

ClientReady -[#green]-> ProcessCanMsg: Received CAN message

ProcessCanMsg -[#green]-> UpdateMap: Rx CAR_X\nRx CAR_Y\nRx CAR_Z\nRx CAR_R

ProcessCanMsg -[#green,dashed]-> UpdateState: Rx INFOTAINMENT_STATE\n(Thin Client Network)

UpdateState -[#green]-> ClientReady: State updated

UpdateMap -[#green]-> ClientReady: Map updated

ProcessButtonPress --> ProcessInfotainmentButton: Station or Volume button pressed

ProcessInfotainmentButton -[#green]-> ClientReady: Send BUTTON_PRESSED

ProcessButtonPress --> ProcessResetButton: Scenario Reset button pressed

ProcessResetButton -[#blue]-> ClientReady:  Send CMD_RESTART(BEAM_NG_SCENARIO)

ClientReady --> ClientTerminate: Component error occured

ClientTerminate -[#blue]-> [*]: Send CMD_COMPONENT_ERROR(THIN_CLIENT|TERMINATED)

@enduml
