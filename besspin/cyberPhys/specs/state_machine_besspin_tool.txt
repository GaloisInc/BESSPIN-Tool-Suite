@startuml
[*] --> BesspinToolBootTargets: Start Tool-Suite

state "BESSPIN tool boot targets" as BesspinToolBootTargets
BesspinToolBootTargets: load from flash / over JTAG
BesspinToolBootTargets: start services

state "BESSPIN tool ready" as BesspinToolReady
BesspinToolBootTargets --> BesspinToolReady: All targets booted

state "BESSPIN Tool Boot Error" as BesspinToolBootError
BesspinToolBootError: reboot target(s) / restart services

BesspinToolBootTargets --> BesspinToolBootError: Target(s) failed to boot
BesspinToolBootError --> BesspinToolReady: Target(s) reboot / services restart successfull
BesspinToolBootError --> BesspinToolTerminate: Target(s) reboot / services restart failed

BesspinToolReady: targets / services runnings
BesspinToolReady: targets respond to HEARTBET_REQ

' NOTE: we don't need to send `component ready` because we are using the heartbeat
' BesspinToolReady --> BesspinToolReady: Periodically send\nCMD_COMPONENT_READY(BESSPIN_TOOL)

state "BESSPIN Tool respond to heartbeat"  as BesspingToolRespondToHeartbeat
BesspingToolRespondToHeartbeat: ID = BESSPIN_TOOL_FREERTOS or\nBESSPIN_TOOL_DEBIAN
BesspinToolReady -> BesspingToolRespondToHeartbeat: Received\nCAN_ID_HEARTBEAT_REQ(REQ_NUM)
BesspingToolRespondToHeartbeat -> BesspinToolReady: Send\nCAN_FORMAT_HEARTBEAT_ACK(REQ_NUM|ID)

state "BESSPIN tool restart target" as BesspinToolRestartTarget
BesspinToolRestartTarget: Restart target / service
BesspinToolReady -> BesspinToolRestartTarget: Received\nCMD_RESTART_COMPONENT(TARGET_ID)
BesspinToolRestartTarget -> BesspinToolReady: Restart successfull\nSend CMD_COMPONENT_READY(TARGET_ID)
BesspinToolRestartTarget --> BesspinToolTerminate: Restart failed

state "BESSPIN tool terminate" as BesspinToolTerminate
BesspinToolTerminate --> [*]

@enduml
