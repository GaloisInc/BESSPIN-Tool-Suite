// Model of InformationLeakage vulnerabilities
// and concrete tests
abstract exposed_data
  // Attributes about the particular
  // exposed data
  or type
    credentials
    cryptography
    system
    stat
    personally_identifiable
    documents
    business

  // Sensitivity of the information.
  // e.g., non-sensitivity would not result in harm
  // if exposed (e.g. public records)
  or sensitivity
    high
    low

  or state
    stored      // In files
    used        // In source/comments, threads, registries, cookies
    transferred // E.G. between processes or over a network

  or size
    small
    medium
    large

  or architectural_layer
    software_layer
    firmware_layer
    or hardware_layer
      register
      wire

abstract iex_weakness
  data : exposed_data

  // To what degree does the weakness allow an attacker
  // to control which data is exposed
  or exposure
    selective
    random

  // How often can the exposure occur
  or frequency
    on_demand
    once
    on_timing //e.g. race conditions

  //How useful is the information on its own?
  or use
    direct
    indirect

  or channel
    legitimate
      diagnostic ?
    side
      covert ?

  or cause
    // Information passing from a protected
    // domain to general pool
    unclear_before_release
    // As above but between domains
    cross_boundary
    // Improper protection/preparation of data
    unprotected_sensitive_data
    // Implementation/Aglorithm errors in SW and HW
    sw_behavior
    hw_behavior
    // E.g. generating messages with too much information
    // (filenames, passwords, etc)
    improper_details
    // Failure to encrypt properly
    enc
    // Authentication/Authorization error
    atn_aut
    // Code injection
    inj
    // Interaction frequency
    // (e.g. this would allow brute force attacks)
    cif

InformationLeakage_Test : iex_weakness ?
  xor Store
    Store_flatstore
    Store_cached
    Store_fragmented
    Store_separate

  xor Interpreter
    Interpreter_binterpreter
    Interpreter_simpleatoi

  xor Test
    Test_atoi
    Test_cache
    Test_classifydeclassify
    Test_directsys
    Test_error
    Test_indexing
    Test_indexing2
    Test_loginmsg
    Test_markprivate
    Test_setenv
    Test_systemconfig
    Test_noClearMalloc
    Test_noClearReallocShrink
    Test_noClearReallocExpand
  [ Test_cache => Store_cached ]

  or CWE
    CWE_200
    CWE_201
    CWE_202
    CWE_203
    CWE_205
    CWE_206
    CWE_212
    CWE_226
    CWE_244
    CWE_524

  ///////////////////////////////////////////
  // Bugs Framework association with CWEs  //
  ///////////////////////////////////////////
  [ sw_behavior
    && (inj || unprotected_sensitive_data || improper_details)
    && (legitimate || diagnostic)
    && once
    <=> CWE_200
  ]

  [ transferred
  /*--------------------*/
    <=> CWE_201
  ]

  [ (unclear_before_release || cross_boundary)
    && on_demand
  /*--------------------*/
    <=> CWE_202
  ]

  [ (covert || side)
    && sw_behavior
  /*--------------------*/
    <=> CWE_203
  ]

  [ (covert || side)
    && sw_behavior
    && (on_demand || once)
  /*--------------------*/
    <=> CWE_205
  ]

  [ (covert || side)
    && sw_behavior
    && (on_demand || once)
  /*--------------------*/
    <=> CWE_206
  ]

  [ high
    && (unclear_before_release || cross_boundary)
  /*--------------------*/
    <=> CWE_212
  ]

  [ (legitimate || diagnostic)
    && (unclear_before_release || cross_boundary)
    && sw_behavior
  /*--------------------*/
    <=> CWE_226
  ]

  [
   unclear_before_release
   && legitimate
   && sw_behavior
  /*--------------------*/
    <=> CWE_244
  ]

  [ (legitimate || diagnostic)
    && (unclear_before_release || cross_boundary)
    && on_timing
  /*--------------------*/
    <=> CWE_524
  ]


  [ Test_directsys              => (transferred && once) ]
  [ Test_indexing               => (side && cross_boundary && sw_behavior && once && on_demand) ]
  [ Test_indexing2              => (side && cross_boundary && sw_behavior && once && on_demand) ]
  [ Test_loginmsg               => ((covert || side) && sw_behavior && once && on_demand) ]
  [ Test_error                  => (sw_behavior && improper_details && once && (legitimate || diagnostic)) ]
  [ Test_markprivate            => (unclear_before_release || cross_boundary) && once ]
  [ Test_setenv                 => (random && sw_behavior && side && cross_boundary && once) ]
  [ Test_classifydeclassify     => ((legitimate || diagnostic) && sw_behavior
                                    && (unclear_before_release || cross_boundary) && on_demand && once) ]
  [ Test_cache                  => ((legitimate || diagnostic) && on_timing && once
                                    && (unclear_before_release || cross_boundary)) ]
  [ Test_atoi                   => (sw_behavior && (inj || unprotected_sensitive_data) 
                                    && once && (legitimate || diagnostic)) ]
  [ Test_systemconfig           => (sw_behavior && (inj || unprotected_sensitive_data) 
                                    && once && (legitimate || diagnostic)) ]
  [ Test_noClearMalloc          =>  (sw_behavior && unclear_before_release && legitimate 
                                    && once && unprotected_sensitive_data) ]
  [ Test_noClearReallocShrink  =>  (sw_behavior && unclear_before_release && legitimate 
                                    && once && unprotected_sensitive_data) ]
  [ Test_noClearReallocExpand  =>  (sw_behavior && unclear_before_release && legitimate 
                                    && once && unprotected_sensitive_data) ]

  ///////////////////////////////////////////////////////////////////////
  // The following constraints describe the concrete tests as realized //
  // in testgen, and are likely not fundamental                        //
  ///////////////////////////////////////////////////////////////////////
  [ high && low ]
  [ credentials ]
  [ cryptography ]
  [ system ]
  [ stat ]
  [ personally_identifiable ]
  [ direct && indirect ]
  // [ documents ] A 'file' store would justify turning this on
  [ business ]

  [ small && !medium && !large ]
  [ direct && indirect ]
  [ enc ]
  [ !covert ]

  // These causes are not under test in the concrete test set
  [ !cif && !hw_behavior ]
// End of InformationLeakage
