image: artifactory.galois.com:5008/fett-target:ci
#-----------------------------------------------------------------------------#
#
# General startup commands
#
#-----------------------------------------------------------------------------#
default:
  artifacts:
    expire_in: 7 days
    when: always
    name: "$CI_COMMIT_REF_SLUG-CI_COMMIT_SHA"
  before_script:
    - . $HOME/.nix-profile/etc/profile.d/nix.sh
    - export PATH=/opt/Xilinx/Vivado/2019.1/bin:/opt/Xilinx/Vivado_Lab/2019.1/bin:$PATH
    - . /opt/Xilinx/Vivado_Lab/2019.1/settings64.sh
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - git submodule update --init

#-----------------------------------------------------------------------------#
#
# Test definitions
#
#-----------------------------------------------------------------------------#
Push:
  tags: ["docker-fpga"]
  rules:
    - if: "$CI_COMMIT_TAG == null"
  script:
    - nix-shell --command "./ci/fett-ci.py runOnPush push-$CI_COMMIT_SHA"
  artifacts:
    paths: [./*-push-$CI_COMMIT_SHA]

DevPR-unix:
  tags: ["docker-fpga"]
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
  parallel: 4
  script:
    - nix-shell --command "./ci/fett-ci.py runDevPR-unix devPR-$CI_COMMIT_SHA -i $CI_NODE_INDEX -N $CI_NODE_TOTAL"
  artifacts:
    paths: [./*-devPR-$CI_COMMIT_SHA]

DevPR-freertos:
  tags: ["docker-fpga-io"]
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
  script:
    - nix-shell --command "./ci/fett-ci.py runDevPR-freertos devPR-$CI_COMMIT_SHA"
  artifacts:
    paths: [./*-devPR-$CI_COMMIT_SHA]

Periodic-unix:
  tags: ["docker-fpga"]
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'schedule'"
  parallel: 16
  script:
    - nix-shell --command "./ci/fett-ci.py runPeriodic-unix periodic-$CI_COMMIT_SHA -i $CI_NODE_INDEX -N $CI_NODE_TOTAL"
  artifacts:
    paths: [./*-periodic-$CI_COMMIT_SHA]

Periodic-freertos:
  tags: ["docker-fpga-io"]
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'schedule'"
  script:
    - nix-shell --command "./ci/fett-ci.py runPeriodic-freertos periodic-$CI_COMMIT_SHA"
  artifacts:
    paths: [./*-periodic-$CI_COMMIT_SHA]

Release-unix:
  tags: ["docker-fpga"]
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'schedule'"
      when: manual
  parallel: 16
  script:
    - nix-shell --command "./ci/fett-ci.py runRelease-unix release-$CI_COMMIT_SHA -i $CI_NODE_INDEX -N $CI_NODE_TOTAL"
  artifacts:
    paths: [./*-release-$CI_COMMIT_SHA]

Release-freertos:
  tags: ["docker-fpga-io"]
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'schedule'"
      when: manual
  script:
    - nix-shell --command "./ci/fett-ci.py runRelease-freertos release-$CI_COMMIT_SHA"
  artifacts:
    paths: [./*-release-$CI_COMMIT_SHA]
