# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# This is the configuration file for fett-target
# User Help: 
# Please fill-in the options as needed then run ./fett.py
# Keep the comments on seperate lines from values. Order of parameters does not matter, but section headers are required.
# Parameters names are case sensitive.
# For bool types, you can use 0/1, False/True, Yes/No [Case insensitive].
# -------Developer Help:
# - To add a new configuration parameter, please edit "base/utils/configData.json" with the 
# description, type, and limits of the argument.
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# fett global environment
[backend]
mode = test
# [test | deploy]
binarySource = GFE
# [ GFE | LMCO | Michigan | MIT | SRI-Cambridge ]
target = qemu
# [ qemu | fpga | aws ]
processor = chisel_p1
# [chisel_p1, bluespec_p2, chisel_p2]
osImage = FreeRTOS
# [ debian | FreeRTOS | FreeBSD | busybox(limited) ]
elfLoader = netboot
# [ JTAG | netboot ]
openConsole = No
# returns a console for FreeBSD/debian
useCustomOsImage = No
# Source of the OS image: If 'No', Nix/FETT-Binaries will be used.
pathToCustomOsImage = /path/to/image
# Path to the osImage in case 'useCustomOsImage' is set to Yes.
useCustomProcessor = No
# Source of the processor files: If 'No', Nix/FETT-Binaries will be used.
pathToCustomProcessorSource = /path/to/source/directory
# Path to a directory with all the files needed (following the structure of FETT-Binaries) to use the custom processor in case 'useCustomProcessor' is set to Yes.
netbootPortRangeStart = 5000
netbootPortRangeEnd = 6000
# Which network port to use for netboot.
qemuNtkPortRangeStart = 5000
qemuNtkPortRangeEnd = 6000
#Which network port to use for qemu. It needs 7 available ports.

#--------------------------------------------------------------------------------
[applications]
buildApps = no
# Building is only available for qemu and fpga targets.
appTimeout = 120
# In "test" mode, this is the timeout (in seconds) for letting the app run before shutting down and calling it a day.
#--------------------------------------------------------------------------------

#--------------------------------------------------------------------------------
# build settings
[build]
cross-compiler = GCC
# [ GCC | Clang ]
linker = GCC
# [ GCC | LLD ]





 
