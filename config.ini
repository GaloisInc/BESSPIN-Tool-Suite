# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# This is the configuration file for fett-target
# User Help: 
# Please fill-in the options as needed then run ./fett.py
# Keep the comments on seperate lines from values. Order of parameters does not matter, but section headers are required.
# Parameters names are case sensitive.
# For bool types, you can use 0/1, False/True, Yes/No [Case insensitive].
# -------Developer Help:
# - To add a new configuration parameter, please edit "base/utils/configData.json" with the 
# description, type, and limits of the argument.
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# fett global environment
[backend]
target = qemu
# [ qemu | fpga | aws ]
processor = chisel_p1
# [bluespec_p1, chisel_p1, bluespec_p2, chisel_p2 + TA-1 teams processors]
osImage = FreeRTOS
# [ debian | FreeRTOS | FreeBSD | busybox(limited) ]
elfLoader = netboot
# [ JTAG | netboot ]
openConsole = No
# returns a console for FreeBSD/debian
useCustomOsImage = No
# Source of the OS image: If 'No', Nix will be used.
pathToCustomOsImage = /path/to/image
# Path to the osImage in case it 'osImageSource' is set to 'custom'
netbootPortRangeStart = 5000
netbootPortRangeEnd = 6000
# Which network port to use for netboot.
qemuNtkPortRangeStart = 5000
qemuNtkPortRangeEnd = 6000
#Which network port to use for qemu. It needs 2 open ports. It will search starting at the provided
#start value until the end value.
qemuSshHostPort = 2222
#Which network port to use for ssh to qemu.

#--------------------------------------------------------------------------------
[applications]
buildApps = no
# Building is only available for qemu and fpga targets.
appTimeout = 30
# In dev/testing mode, this is the timeout (in seconds) for letting the app run before shutting down and calling it a day.

# Choosing which Unix apps to run -- all FreeRTOS run by default
webserver = no
database = no
#--------------------------------------------------------------------------------

#--------------------------------------------------------------------------------
# build settings
[build]
cross-compiler = GCC
# [ GCC | Clang ]
linker = GCC
# [ GCC | LLD ]





 
