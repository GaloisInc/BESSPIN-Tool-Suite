# All scheduled jobs only run on the master branch. Consequently, any changes
# to this file will not be refelcted in the CI until it is merged to master.
#
# To run the workflow on the develop branch, develop is checked out manually.
name: Scheduled Runs
on:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - "actions/*"

jobs:
  Periodic:
    runs-on: docker-fpga
    strategy:
      fail-fast: false
      matrix:
        cfg: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    steps:
      - run: |
          if [[ "${{ github.event_name }}" == "schedule" ]]; then ref=develop; else ref="${{ github.ref }}"; fi
          echo "::set-env name=ref::$ref"

      - name: Remove lock file if it exists to prevent git fetch failures
        run: find .git -name index.lock -print -exec rm -f {} +
        continue-on-error: true
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          lfs: true
          ref: ${{ env.ref }}
      - uses: ./.github/action
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          run: nix-shell --command "./ci/fett-ci.py runPeriodic -ep OnPrem -art periodic-${{ github.sha }} -i ${{ matrix.cfg }}
      - if: always()
        uses: actions/upload-artifact@v2
        with:
          name: periodic-${{ github.sha }}
          path: "*-periodic-${{ github.sha }}"

  Release:
    if: "!always()"
    runs-on: docker-fpga
    strategy:
      fail-fast: false
      matrix:
        cfg: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    steps:
      - run: |
          if [[ "${{ github.event_name }}" == "schedule" ]]; then ref=develop; else ref="${{ github.ref }}"; fi
          echo "::set-env name=ref::$ref"

      - name: Remove lock file if it exists to prevent git fetch failures
        run: find .git -name index.lock -print -exec rm -f {} +
        continue-on-error: true
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          lfs: true
          ref: ${{ env.ref }}
      - uses: ./.github/action
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          run: nix-shell --command "./ci/fett-ci.py runRelease -ep OnPrem -art release-${{ github.sha }} -i ${{ matrix.cfg }}
      - if: always()
        uses: actions/upload-artifact@v2
        with:
          name: release-${{ github.sha }}
          path: "*-release-${{ github.sha }}"
